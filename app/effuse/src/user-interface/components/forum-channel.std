<s:meta name="forum-channel">
  <attr name="client" />
</s:meta>

<script>
  import { UseUrlParameters } from "../integrations/url";
  const { server_id, channel_id } = UseUrlParameters(
    self,
    "/servers/:server_id/channels/:channel_id"
  );

  async function create_topic({ FormData }) {
    console.log(FormData);
  }
</script>

<script on="mut">
  const topics = (await self.client.GetTopics(channel_id)).map((t) => ({
    ...t,
    Url: `/servers/${server_id}/channels/${channel_id}/topics/${t.Id}`,
  }));
</script>

<style>
  .create-button {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
  }
</style>

<s:for subject=":topics" key="topic">
  <t-link href=":topic.Id" spa block><s:text use=":topic.Title" /></t-link>
</s:for>

<u-route path="/topics/:topic_id">
  <div>Topic</div>
</u-route>

<div class="create-button">
  <f-button
    href=":`/servers/${server_id}/channels/${channel_id}/create-topic`"
    spa
  >
    <t-icon name="add" size="body" colour="primary" text />
  </f-button>
</div>

<o-modal path="/create-topic" size="large">
  <span slot="title">Create a Topic</span>
  <f-form submit="event-only" on:Submitted="create_topic">
    <l-row>
      <l-col xs="12">
        <f-input name="title" required>Title</f-input>
      </l-col>
      <l-col xs="12">
        <f-richtext name="content" required>Content</f-richtext>
      </l-col>
      <l-col xs="12">
        <f-button type="submit">Create</f-button>
      </l-col>
    </l-row>
  </f-form>
</o-modal>
