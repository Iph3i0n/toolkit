<s:meta name="effuse-server-list">
  <attr name="client">The API client for the SSO Server</attr>
</s:meta>

<script>
  let profile = await self.client.GetProfile();
  const get_servers = async () =>
    await Promise.all(
      profile.Servers.map(async (s) => ({
        ...s,
        Client: await self.client.GetLocalClient(s.Url),
      }))
    );

  let servers = await get_servers();

  let open = false;

  const search = new URLSearchParams(location.search);
  const prefill_url = search.get("server_url") ?? "";
  const prefill_password = search.get("password") ?? "";

  async function join_server({ FormData }) {
    await self.client.PostServer({
      server_url: FormData.ServerUrl,
      password: FormData.Password,
    });

    profile = await self.client.GetProfile();
  }

  $after: {
    servers = await get_servers();
  }
</script>

<style>
  .list-trigger {
    position: fixed;
    bottom: 0;
    left: 0;
    padding: 1rem;
  }

  o-offcanvas f-button {
    position: absolute;
    bottom: 0;
    left: 0;
    width: calc(100% - 1rem);
    margin: 0.5rem;
    box-sizing: border-box;
  }

  .join-form {
    margin: auto;
    max-width: 400px;
    padding: 1rem;
  }
</style>

<div class="list-trigger">
  <f-button type="button" on:click="() => (open = true)">
    <t-icon name="menu-3" size="body" colour="primary" text />
  </f-button>
</div>

<o-offcanvas open=":open" size="small" on:CloseRequested="() => (open = false)">
  <span slot="title">Servers</span>
  <s:for subject=":servers" key="server">
    <effuse-server-list-item client=":server.Client" server_id=":server.Id" />
  </s:for>
  <f-button type="link" href="/join-server" on:click="() => (open = false)" spa>
    +
  </f-button>
</o-offcanvas>

<u-route path="/join-server">
  <div class="join-form">
    <f-form submit="event-only" on:Submitted="join_server">
      <l-row>
        <l-col xs="12">
          <t-heading level="h3">Join a Server</t-heading>
        </l-col>
      </l-row>
      <l-row>
        <l-col xs="12">
          <f-input name="ServerUrl" prefill=":prefill_url" required>
            Server URL
          </f-input>
        </l-col>
        <l-col xs="12">
          <f-input
            name="Password"
            prefill=":prefill_password"
            required
            sensitive
          >
            Password
          </f-input>
        </l-col>
        <l-col xs="12">
          <f-button type="submit">Join</f-button>
        </l-col>
      </l-row>
    </f-form>
  </div>
</u-route>
