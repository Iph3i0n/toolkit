<s:meta name="effuse-start" />

<script>
  import { SetSso } from "./client-manager";
  import { SsoClient } from "../integrations/sso";
  import { UseUrlParameters } from "../integrations/url";

  let sso = await SsoClient.Attempt();
  SetSso(sso);
  let mode = "login";

  async function on_login({ FormData }) {
    sso = await SsoClient.Login(FormData.Email, FormData.Password);
    SetSso(sso);
  }

  async function on_register({ FormData }) {
    sso = await SsoClient.Register({
      user_name: FormData.UserName,
      email: FormData.Email,
      password: FormData.Password,
    });
    SetSso(sso);
  }
</script>

<style>
  :host {
    display: block;
    height: 100vh;
    overflow: hidden;
  }

  .app-body {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .app-body l-header {
    width: 100%;
    margin-bottom: 0;
  }

  .app-content {
    width: 100%;
    flex: 1;
  }

  .login-form {
    margin: auto;
    max-width: 400px;
    padding: 1rem;
  }
</style>

<u-fetch
  url="/ui-text/{{ locale }}/effuse-start.json"
  name="text"
  fallback="/ui-text/en-GB/effuse-start.json"
>
  <s:if check=":!sso">
    <div class="login-form">
      <s:if check=":mode === 'login'">
        <f-form submit="event-only" on:Submitted="on_login">
          <l-row>
            <l-col xs="12">
              <f-input name="Email" required>
                <u-text use="|this.state.text.email" />
              </f-input>
            </l-col>
            <l-col xs="12">
              <f-input name="Password" required sensitive>
                <u-text use="|this.state.text.password" />
              </f-input>
            </l-col>
            <l-col xs="12">
              <f-button type="submit">
                <u-text use="|this.state.text.login" />
              </f-button>
              <f-button
                type="button"
                colour="contrast"
                on:click="() => (mode = 'register')"
              >
                <u-text use="|this.state.text.register_nav" />
              </f-button>
            </l-col>
          </l-row>
        </f-form>
      </s:if>
      <s:if check=":mode === 'register'">
        <f-form submit="event-only" on:Submitted="on_register">
          <l-row>
            <l-col xs="12">
              <f-input name="UserName" validate="^[a-zA-Z0-9]+$" required>
                <u-text use="|this.state.text.username" />
              </f-input>
            </l-col>
            <l-col xs="12">
              <f-input name="Email" type="email" required>
                <u-text use="|this.state.text.email" />
              </f-input>
            </l-col>
            <l-col xs="12">
              <f-input name="Password" required sensitive>
                <u-text use="|this.state.text.password" />
              </f-input>
            </l-col>
            <l-col xs="12">
              <f-button type="submit">
                <u-text use="|this.state.text.register" />
              </f-button>
              <f-button
                type="button"
                colour="contrast"
                on:click="() => (mode = 'login')"
              >
                <u-text use="|this.state.text.login_nav" />
              </f-button>
            </l-col>
          </l-row>
        </f-form>
      </s:if>
    </div>
  </s:if>

  <s:if check=":sso">
    <effuse-config />
    <div class="app-body">
      <l-container flush class="app-content">
        <u-route path="/join-server" ele="effuse-join-server" />
        <u-route path="/profile" ele="effuse-profile" />
        <u-route path="/servers/:server_id" ele="server-viewer" />
      </l-container>
    </div>
  </s:if>
</u-fetch>
