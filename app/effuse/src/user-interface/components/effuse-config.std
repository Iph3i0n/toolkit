<s:meta name="effuse-config"></s:meta>

<script>
  import { UseSso } from "./client-manager";

  const client = UseSso();

  const get_servers = async () => {
    const profile = await client.GetProfile();
    return await Promise.all(
      profile.Servers.map(async (s) => ({
        ...s,
        Client: await client.GetLocalClient(s.Id, s.Url),
      }))
    );
  };

  let servers = await get_servers();

  let open = false;

  document.addEventListener("joined_server", async () => {
    servers = await get_servers();
    self.should_render();
  });

  document.addEventListener("NavigationEvent", () => {
    open = false;
    self.should_render();
  });
</script>

<style>
  .list-trigger {
    position: fixed;
    bottom: 0;
    left: 0;
    padding: 1rem;
  }

  .action-buttons {
    position: absolute;
    bottom: 1rem;
    width: 100%;
  }

  .action-buttons f-button {
    width: calc(100% - 2rem);
    box-sizing: border-box;
  }
</style>

<u-fetch
  url="/ui-text/{{ locale }}/effuse-config.json"
  name="text"
  fallback="/ui-text/en-GB/effuse-config.json"
>
  <div class="list-trigger">
    <f-button type="button" on:click="() => (open = true)">
      <t-icon name="menu-3" size="body" colour="primary" text />
    </f-button>
  </div>

  <o-offcanvas
    open=":open"
    size="small"
    on:CloseRequested="() => (open = false)"
  >
    <span slot="title">
      <u-text use="|this.state.text.servers" />
    </span>
    <s:for subject=":servers" key="server">
      <effuse-server-list-item client=":server.Client" server_id=":server.Id" />
    </s:for>

    <div class="action-buttons">
      <f-button href="/profile" spa>
        <t-icon name="user" size="body" colour="primary" size="body" text />
      </f-button>
    </div>
  </o-offcanvas>
</u-fetch>
