<s:meta name="wisdom-block">
  <attr name="block_id" type="string">The ID of the current page</attr>
</s:meta>

<script>
  import { GetJson, PutJson } from "../utils/fetch";
  import Url from "@ipheion/url";

  let data = await GetJson(
    new Url("/api/v1/blocks/:id", { id: self.block_id })
  );

  const layout = await GetJson(
    new Url("/api/v1/schema/blocks/:id", { id: data.type })
  );
  const blocks = await GetJson("/api/v1/schema/blocks");
</script>

<script on="mut">
  data = await GetJson(new Url("/api/v1/blocks/:id", { id: self.block_id }));

  /** @param {CustomEvent} event */
  async function add_block(event) {
    const slots = data.slots ?? {};
    await PutJson(new Url("/api/v1/blocks/:id/slots", { id: self.block_id }), {
      slots: {
        ...slots,
        [event.detail.slot]: [
          ...(slots[event.detail.slot] ?? []),
          event.detail.id,
        ],
      },
    });
    self.should_render();
  }
</script>

<f-form
  url=":new Url('/api/v1/blocks/:id', { id: self.block_id }).Href"
  method="put"
  on:AfterSubmit="() => { self.should_render() }"
>
  <div>
    <l-container>
      <l-row>
        <l-col xs="12">
          <f-input name="slug" prefill=":data.slug" type="text">
            Slug (optional)
            <span slot="help">
              Use this to allow reuse of the block in other places. Otherwise it
              will only be available here.
            </span>
            <span slot="invalid">
              Slugs may only have lower case characters, numbers, and dashes
            </span>
          </f-input>
        </l-col>
        <l-col xs="12">
          <f-select name="type" prefill=":data.type" required>
            <span slot="label">Block Type</span>
            <span slot="empty">Please select a block type</span>
            <s:for subject=":blocks" key="block">
              <option value=":block"><s:text use=":block" /></option>
            </s:for>
          </f-select>
        </l-col>
        <l-col xs="12">
          <f-button type="submit">Update Metadata</f-button>
        </l-col>
      </l-row>
    </l-container>
  </div>
</f-form>

<content-form
  url=":new Url('/api/v1/blocks/:id/properties', { id: self.block_id }).Href"
  data=":data"
  schema=":layout"
  on:submit-complete="() => self.should_render()"
>
  Update Content
</content-form>

<slot-manager data=":data" schema=":layout" on:block-added="add_block" />
